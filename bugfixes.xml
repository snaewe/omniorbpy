<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="bugfixes.xsl"?>

<!-- The following bugs have been fixed since the omniORBpy 1.2     -->
<!-- release. This file is transformed into html with bugfixes.xsl. -->

<!-- Editors: make sure the content you add is well-formed XML.     -->

<buglist version="1.2">

<bug id="3" date="Thu Nov  2 17:41:22 GMT 2000" user="dpg1">

  <summary>Unnecessary call to _is_a() after narrow()</summary>
  <text>
  After a call to _narrow(), an unnecessary call to _is_a() would be
  made on the first call to the narrowed reference.
  </text>
</bug>

<bug id="2" date="Wed Nov  1 11:21:45 GMT 2000" user="dpg1">

  <summary>Recursive structs inside interfaces</summary>

  <text>
  The IDL compiler would generate incorrect code for recursive structs
  declared within interfaces.
  </text>
</bug>

<bug id="1" date="Mon Oct  9 09:54:53 BST 2000" user="dpg1">

  <summary>Premature deletion of Python thread state</summary>

  <text>
  <p>
  If a servant method makes a call into omniORB which requires the ORB
  to make another up-call to Python, the thread state for the call is
  marked as inactive when the up-call finishes, even though the
  servant call is still in progress. If the method takes more than a
  minute to complete, without making any more re-entrant up-calls, the
  thread state will be deleted while the thread is still running.
  </p>
  <p>
  This is <em>not</em> the problem described <a
  href="http://www.uk.research.att.com/omniORB/archives/2000-10/0021.html">here</a>,
  which is due to mixing threads created with the <code>thread</code>
  package with primitives from the <code>threading</code> package.
  </p>
  </text>

</bug>


</buglist>
