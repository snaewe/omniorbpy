RELEASE NOTES for omniORBpy 2.0 beta 2
======================================

This is the second beta release of omniORBpy 2.0.

See README for building instructions.


Major new features since omniORBpy 1.x
--------------------------------------

 - Updated to CORBA 2.6.
 - Support for GIOP 1.1 and 1.2.
 - Wide string and codeset negotiation.
 - Unix domain and SSL transports.
 - Bidirectional GIOP.
 - Thread pool mode.
 - PortableServer::Current.
 - Efficient in-process calls between C++ and Python.
 - Python / C++ object reference translation API.
 - Fixed point.
 - New comprehensive configuration mechanism.
 - Commercial support. See http://www.omniorb-support.com/

And many other improvements.


Known issues
------------

This beta is almost feature complete, but it has the following known
issues and omissions.

These issues should be fixed/resolved before the full 2.0 release:

 - Thread and mutex tracing is turned on by default, which has a
   serious performance impact. If you are doing performance testing,
   turn it off with the --disable-thread-tracing argument to configure
   when configuring omniORB 4.0.0 for C++, or by editing
   include/omniconfig.h. Otherwise, please leave it turned on, since
   it will help track down any threading bugs in omniORB. Tracing will
   be turned off by default in the omniORB 4.0.0 release.

 - If a client has the offerBiDirectionalGIOP parameter set true, but
   it has not created a bidirectional POA, an exception is thrown on
   the first call.

 - The omniORB.sslTP and omniORB.codesets modules are not implemented.

 - Python int and long types are not interchangeable, as is now
   expected in Python.


These issues may not be resolved before the 4.0 release, but will be
fixed by 2.1:

 - The planned per-thread call timeout is not implemented.
